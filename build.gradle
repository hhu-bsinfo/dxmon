import org.gradle.internal.jvm.Jvm

plugins {
    id 'java'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.4'
    id "com.jfrog.artifactory" version "4.7.5"
}

group = 'de.hhu.bsinfo'
version = '0.3.0' + (Boolean.valueOf(System.getProperty('release')) ? '' : '-SNAPSHOT')

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()

    maven {
        url "https://plugins.gradle.org/m2/"
    }

    maven {
        url "https://dl.bintray.com/hhu-bsinfo/dxram"
    }

    maven {
        url 'https://oss.jfrog.org/artifactory/oss-snapshot-local'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

dependencies {
    implementation files(Jvm.current().toolsJar)
    implementation 'de.hhu.bsinfo:dxutils:0.7.0' + (Boolean.valueOf(System.getProperty('release')) ? '' : '-SNAPSHOT')

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task fatJar(type: Jar) {
    manifest {
        attributes(
                'BuildUser': System.properties['user.name'],
                'BuildDate': new Date().format("yyyy-MM-dd HH:mm:ss"),
                'Class-Path': configurations.compileClasspath.files.collect { "$it.name" }.join(' '),
        )
    }

    baseName = project.name

    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    with jar
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

apply from: 'publish.gradle'
apply from: 'bintray.gradle'
apply from: 'artifactory.gradle'

task wrapper(type: Wrapper) {
    gradleVersion = "4.10"
}
